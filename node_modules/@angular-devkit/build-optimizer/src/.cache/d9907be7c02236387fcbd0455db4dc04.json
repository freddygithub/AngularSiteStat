{"remainingRequest":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\core-js\\modules\\_collection.js","dependencies":[{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\core-js\\modules\\_collection.js","mtime":499162500000},{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526574658797},{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["'use strict';\nvar global = require('./_global');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar redefineAll = require('./_redefine-all');\nvar meta = require('./_meta');\nvar forOf = require('./_for-of');\nvar anInstance = require('./_an-instance');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar $iterDetect = require('./_iter-detect');\nvar setToStringTag = require('./_set-to-string-tag');\nvar inheritIfRequired = require('./_inherit-if-required');\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n    var Base = global[NAME];\n    var C = Base;\n    var ADDER = IS_MAP ? 'set' : 'add';\n    var proto = C && C.prototype;\n    var O = {};\n    var fixMethod = function (KEY) {\n        var fn = proto[KEY];\n        redefine(proto, KEY, KEY == 'delete' ? function (a) {\n            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n        } : KEY == 'has' ? function has(a) {\n            return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n        } : KEY == 'get' ? function get(a) {\n            return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n        } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }\n            : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; });\n    };\n    if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n        new C().entries().next();\n    }))) {\n        // create collection constructor\n        C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n        redefineAll(C.prototype, methods);\n        meta.NEED = true;\n    }\n    else {\n        var instance = new C();\n        // early implementations not supports chaining\n        var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n        // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n        var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });\n        // most early implementations doesn't supports iterables, most modern - not close it correctly\n        var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new\n        // for early implementations -0 and +0 not the same\n        var BUGGY_ZERO = !IS_WEAK && fails(function () {\n            // V8 ~ Chromium 42- fails only with 5+ elements\n            var $instance = new C();\n            var index = 5;\n            while (index--)\n                $instance[ADDER](index, index);\n            return !$instance.has(-0);\n        });\n        if (!ACCEPT_ITERABLES) {\n            C = wrapper(function (target, iterable) {\n                anInstance(target, C, NAME);\n                var that = inheritIfRequired(new Base(), target, C);\n                if (iterable != undefined)\n                    forOf(iterable, IS_MAP, that[ADDER], that);\n                return that;\n            });\n            C.prototype = proto;\n            proto.constructor = C;\n        }\n        if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n            fixMethod('delete');\n            fixMethod('has');\n            IS_MAP && fixMethod('get');\n        }\n        if (BUGGY_ZERO || HASNT_CHAINING)\n            fixMethod(ADDER);\n        // weak collections should not contains .clear method\n        if (IS_WEAK && proto.clear)\n            delete proto.clear;\n    }\n    setToStringTag(C, NAME);\n    O[NAME] = C;\n    $export($export.G + $export.W + $export.F * (C != Base), O);\n    if (!IS_WEAK)\n        common.setStrong(C, NAME, IS_MAP);\n    return C;\n};\n",null]}