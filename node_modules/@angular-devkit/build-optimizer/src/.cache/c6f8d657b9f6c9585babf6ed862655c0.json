{"remainingRequest":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\core-js\\modules\\es6.math.hypot.js","dependencies":[{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\core-js\\modules\\es6.math.hypot.js","mtime":499162500000},{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526574658797},{"path":"C:\\Users\\Freddy\\Desktop\\stat\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1526531406000}],"contextDependencies":[],"result":["// 20.2.2.17 Math.hypot([value1[, value2[, â€¦ ]]])\nvar $export = require('./_export');\nvar abs = Math.abs;\n$export($export.S, 'Math', {\n    hypot: function hypot(value1, value2) {\n        var sum = 0;\n        var i = 0;\n        var aLen = arguments.length;\n        var larg = 0;\n        var arg, div;\n        while (i < aLen) {\n            arg = abs(arguments[i++]);\n            if (larg < arg) {\n                div = larg / arg;\n                sum = sum * div * div + 1;\n                larg = arg;\n            }\n            else if (arg > 0) {\n                div = arg / larg;\n                sum += div * div;\n            }\n            else\n                sum += arg;\n        }\n        return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n    }\n});\n",null]}